import os
import json

DOCS_DIR = "docs_kb"
OUTPUT_FILE = "procedures.md"
EXCLUDE_FILES = {"all_links.json", ".DS_Store"}

def get_og_url(metadata):
    # Try both 'og:url' and 'ogUrl'
    return (
        metadata.get("og:url")
        or metadata.get("ogUrl")
        or metadata.get("url")
        or "Not specified"
    )

def extract_field(data, field):
    return data.get(field) or "Not specified"

def process_file(filepath):
    with open(filepath, "r", encoding="utf-8") as f:
        doc = json.load(f)
    procedure = doc.get("json")
    metadata = doc.get("metadata", {})
    if not procedure or not isinstance(procedure, dict):
        return None  # skip files without a valid json field
    name = extract_field(procedure, "procedure_name")
    explanation = extract_field(procedure, "explanation")
    overview = extract_field(procedure, "treatment_overview")
    ptype = extract_field(procedure, "procedure_type")
    cost = extract_field(procedure, "cost")
    recovery = extract_field(procedure, "recovery_time")
    duration = extract_field(procedure, "results_duration")
    misc = extract_field(procedure, "miscellaneous_information")
    og_url = get_og_url(metadata)
    return f"""## {name}

**Source:** [{og_url}]({og_url})

### Explanation
{explanation}

### Treatment Overview
{overview}

### Procedure Type
{ptype}

### Cost
{cost}

### Recovery Time
{recovery}

### Results Duration
{duration}

### Miscellaneous Information
{misc}

---
"""

def main():
    files = [
        f for f in os.listdir(DOCS_DIR)
        if f.endswith(".json") and f not in EXCLUDE_FILES
    ]
    files.sort(key=lambda x: int(x.split(".")[0]) if x.split(".")[0].isdigit() else x)
    output = [
        "<!--",
        "This file is auto-generated by extracting the `json` field from each .json file in docs_kb/.",
        "Each procedure is a top-level heading, with subheadings for each field, and includes the og:url as metadata.",
        "If a field is missing, it is marked as 'Not specified'.",
        "-->\n"
    ]
    for fname in files:
        fpath = os.path.join(DOCS_DIR, fname)
        section = process_file(fpath)
        if section:
            output.append(section)
    with open(OUTPUT_FILE, "w", encoding="utf-8") as out:
        out.write("\n".join(output))
    print(f"Wrote {len(output)-1} procedures to {OUTPUT_FILE}")

if __name__ == "__main__":
    main() 