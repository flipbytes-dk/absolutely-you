import os
import json

DOCS_DIR = "docs_concerns_kb"
OUTPUT_FILE = "concerns_combined.md"
EXCLUDE_FILES = {"all_links.json", ".DS_Store"}

def extract_field(data, field):
    return data.get(field) or "Not specified"

def process_file(filepath):
    with open(filepath, "r", encoding="utf-8") as f:
        doc = json.load(f)
    concern = doc.get("json")
    if not concern or not isinstance(concern, dict):
        return None  # skip files without a valid json field
    name = extract_field(concern, "concern_name")
    info = extract_field(concern, "concern_information")
    treatments = extract_field(concern, "treatments_offered")
    faq = extract_field(concern, "concern_faq")
    misc = extract_field(concern, "miscellaneous_information")
    return f"""## {name}\n\n### Concern Information\n{info}\n\n### Treatments Offered\n{treatments}\n\n### FAQ\n{faq}\n\n### Miscellaneous Information\n{misc}\n\n---\n"""

def main():
    files = [
        f for f in os.listdir(DOCS_DIR)
        if f.endswith(".json") and f not in EXCLUDE_FILES
    ]
    files.sort(key=lambda x: int(x.split(".")[0]) if x.split(".")[0].isdigit() else x)
    output = [
        "<!--",
        "This file is auto-generated by extracting the `json` field from each .json file in docs_concerns_kb/.",
        "Each concern is a top-level heading, with subheadings for each field.",
        "If a field is missing, it is marked as 'Not specified'.",
        "-->\n"
    ]
    for fname in files:
        fpath = os.path.join(DOCS_DIR, fname)
        section = process_file(fpath)
        if section:
            output.append(section)
    with open(OUTPUT_FILE, "w", encoding="utf-8") as out:
        out.write("\n".join(output))
    print(f"Wrote {len(output)-1} concerns to {OUTPUT_FILE}")

if __name__ == "__main__":
    main() 